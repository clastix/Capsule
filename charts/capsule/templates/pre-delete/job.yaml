{{- if not $.Values.crds.exclusive }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ include "capsule.pre-delete.name" $ }}"
  labels:
    app.kubernetes.io/component: {{ include "capsule.pre-delete.component" . | quote }}
    {{- include "capsule.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook-weight": "-1"
    {{- include "capsule.pre-delete.annotations" . | nindent 4 }}
    {{- with .Values.customAnnotations }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  {{- if ge .Values.jobs.ttlSecondsAfterFinished 0.0 }}
  ttlSecondsAfterFinished: {{ .Values.jobs.ttlSecondsAfterFinished }}
  {{- end }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: {{ include "capsule.pre-delete.component" . | quote }}
        {{- include "capsule.selectorLabels" . | nindent 8 }}
    spec:
      restartPolicy: {{ $.Values.jobs.restartPolicy }}
      {{- with $.Values.jobs.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.jobs.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.jobs.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.jobs.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.jobs.topologySpreadConstraints }}
      topologySpreadConstraints: 
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.jobs.priorityClassName }}
      priorityClassName: {{ . }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "capsule.pre-delete.name" . }}
      containers:
        - name: pre-delete-job
          image: {{ include "capsule.jobsFullyQualifiedDockerImage" . }}
          imagePullPolicy: {{ .Values.jobs.image.pullPolicy }}
          command:
          - "/bin/sh"
          - "-c"
          - |
              set -o errexit ; set -o xtrace ; set -o nounset
          {{- if or (.Values.tls.create) (.Values.certManager.generateCertificates) }}
              kubectl delete secret -n $NAMESPACE {{ include "capsule.secretTlsName" $ }} --ignore-not-found
          {{- end }}
              kubectl delete clusterroles.rbac.authorization.k8s.io capsule-namespace-deleter capsule-namespace-provisioner --ignore-not-found
              kubectl delete clusterrolebindings.rbac.authorization.k8s.io capsule-namespace-deleter capsule-namespace-provisioner --ignore-not-found
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          {{- with $.Values.jobs.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.jobs.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
{{- end }}